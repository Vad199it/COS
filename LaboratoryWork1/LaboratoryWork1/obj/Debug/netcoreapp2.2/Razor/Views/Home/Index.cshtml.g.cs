#pragma checksum "C:\Users\MA\Desktop\COS\LaboratoryWork1\LaboratoryWork1\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "20eaaef93e021920d3c09dc42a7cb99dfd5d4a49"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Home/Index.cshtml", typeof(AspNetCore.Views_Home_Index))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\MA\Desktop\COS\LaboratoryWork1\LaboratoryWork1\Views\_ViewImports.cshtml"
using LaboratoryWork1;

#line default
#line hidden
#line 2 "C:\Users\MA\Desktop\COS\LaboratoryWork1\LaboratoryWork1\Views\_ViewImports.cshtml"
using LaboratoryWork1.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"20eaaef93e021920d3c09dc42a7cb99dfd5d4a49", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"f5b9f2bc122a890669f64cee56f4cf163ea5eeaa", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<LaboratoryWork1.ViewModels.Formula>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("method", "post", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-controller", "Home", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-action", "Index", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("form"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("style", new global::Microsoft.AspNetCore.Html.HtmlString("display: flex; flex-direction: row;"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/Chart.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(43, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 3 "C:\Users\MA\Desktop\COS\LaboratoryWork1\LaboratoryWork1\Views\Home\Index.cshtml"
  
    ViewData["Title"] = "Home Page";

#line default
#line hidden
            BeginContext(90, 56, true);
            WriteLiteral("\r\n<div class=\"text-center\" style=\"display: flex;\">\r\n    ");
            EndContext();
            BeginContext(146, 4258, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "20eaaef93e021920d3c09dc42a7cb99dfd5d4a495812", async() => {
                BeginContext(261, 4136, true);
                WriteLiteral(@"
        <div style=""display: flex; flex-direction: column; align-items: flex-start; margin-right: 10px;"">
            <label>Амплитуда 1<input type=""number"" step=""0.1"" name=""amplitude1"" value=""0.6"" id=""amplitude1"" onchange=""GetRequest()"" style=""width: 70px"" /></label>
            <label>Амплитуда 2<input type=""number"" step=""0.1"" name=""amplitude2"" value=""0.5"" id=""amplitude2"" onchange=""GetRequest()"" style=""width: 70px"" /></label>
            <label>Амплитуда 3<input type=""number"" step=""0.1"" name=""amplitude3"" value=""0.5"" id=""amplitude3"" onchange=""GetRequest()"" style=""width: 70px"" /></label>
            <label>Амплитуда 4<input type=""number"" step=""0.1"" name=""amplitude4"" value=""0.5"" id=""amplitude4"" onchange=""GetRequest()"" style=""width: 70px"" /></label>
            <label>Начальная фаза<input type=""number"" step=""0.1"" name=""initialPhase"" value=""0.2"" id=""initialphase"" onchange=""GetRequest()"" style=""width: 70px"" /></label>
            <label>Частота 1<input type=""number"" step=""0.1"" name=""frequency1"" value=""1"" ");
                WriteLiteral(@"id=""frequency1"" onchange=""GetRequest()"" style=""width: 70px"" /></label>
            <label>Частота 2<input type=""number"" step=""0.1"" name=""frequency2"" value=""1"" id=""frequency2"" onchange=""GetRequest()"" style=""width: 70px"" /></label>
            <label>Частота 3<input type=""number"" step=""0.1"" name=""frequency3"" value=""1"" id=""frequency3"" onchange=""GetRequest()"" style=""width: 70px"" /></label>
            <label>Частота 4<input type=""number"" step=""0.1"" name=""frequency4"" value=""1"" id=""frequency4"" onchange=""GetRequest()"" style=""width: 70px"" /></label>
            <label>
                N
                <input id=""range"" type=""range"" name=""n"" min=""256"" max=""20480"" step=""256"" value=""256"" onchange=""updateTextInput(this.value)"" />
                <input type=""text"" id=""textInput"" value=""256"" onchange=""GetRequest()"" style=""width: 70px"" />
            </label>
            <label>
                M
                <input id=""rangeM"" type=""range"" name=""m"" min=""10"" max=""1024"" step=""10"" value=""10"" onchange=""updateTe");
                WriteLiteral(@"xtInputM(this.value)"" />
                <input type=""text"" id=""textInputM"" value=""10"" onchange=""GetRequest()"" style=""width: 70px"" />
            </label>
            <label><input type=""checkbox"" name=""noise"" id=""noise"" onchange=""GetRequest()"" />Шум</label>
            <label><input type=""checkbox"" name=""line"" id=""line"" onchange=""ShowHideLine()"" />Линии</label>
            <label><input type=""checkbox"" name=""frequencym"" id=""frequencym"" onchange=""GetRequest()"" />Частотная модуляция</label>
            <label><input type=""checkbox"" name=""amplitudem"" id=""amplitudem"" onchange=""GetRequest()"" />Амплитудная модуляция</label>
        </div>
        <div style=""display: flex; flex-direction: column; align-items: flex-start;"">
            <label><input type=""radio"" name=""radio"" value=""1"" checked onchange=""GetRequest()"" />Синусоида</label>
            <label><input type=""radio"" name=""radio"" value=""3"" onchange=""GetRequest()"" />Квадратичный</label>
            <label><input type=""radio"" name=""radio"" value=""4"" ");
                WriteLiteral(@"onchange=""GetRequest()"" />Треугольный</label>
            <label><input type=""radio"" name=""radio"" value=""5"" onchange=""GetRequest()"" />Пилообразный</label>
            <label><input type=""radio"" name=""radio"" value=""6"" onchange=""GetRequest()"" />Синусоида + Квадратичный</label>
            <label><input type=""radio"" name=""radio"" value=""7"" onchange=""GetRequest()"" />Квадратичный + Треугольный</label>
            <label><input type=""radio"" name=""radio"" value=""8"" onchange=""GetRequest()"" />Треугольный + Пилообразный</label>
            <label><input type=""radio"" name=""radio"" value=""9"" onchange=""GetRequest()"" />Пилообразный + Синусоида</label>
            <label><input type=""radio"" name=""radio"" value=""10"" onchange=""GetRequest()"" />Синусоида + Квадратичный + Треугольный</label>
            <label><input type=""radio"" name=""radio"" value=""11"" onchange=""GetRequest()"" />Квадратичный + Треугольный + Пилообразный</label>
            <label><input type=""radio"" name=""radio"" value=""12"" onchange=""GetRequest()"" />Все сразу");
                WriteLiteral("</label>\r\n        </div>\r\n        \r\n    ");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Controller = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Action = (string)__tagHelperAttribute_2.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(4404, 101, true);
            WriteLiteral("\r\n    <div style=\"width: 700px; height: 500px;\" id=\"chart-container\">\r\n        \r\n    </div>\r\n\r\n\r\n    ");
            EndContext();
            BeginContext(4505, 37, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "20eaaef93e021920d3c09dc42a7cb99dfd5d4a4912731", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(4542, 4591, true);
            WriteLiteral(@"

    <script>
        var config = {
                type: 'line',
                data: {
                    labels: [],
                    datasets: [{
                        label: '',
                        backgroundColor: ""#FFF"",
                        borderColor: ""#FFF"",
                        borderWidth: 0,
                        pointBackgroundColor: ""#FF0000"",
                        pointBorderColor: ""#FF0000"",
                        lineTension: 0,
                        fill: false,
                        data: []
                    }]
                },
                options: {
                    elements: {
                        point: {
                            radius: 0.5
                        }
                    },
                    responsive: true,
                    title: {
                        display: false,
                        text: 'Chart'
                    },
                    scales: {
                        xA");
            WriteLiteral(@"xes: [{
                            display: true,
                        }],
                        yAxes: [{
                            ticks: {
                                stepSize: 1,
                            },
                            display: true,
                        }]
                    }
                }
            };
        window.onload = () => GetRequest() ;
        function updateTextInput(val) {
            document.getElementById('textInput').value = val;
            GetRequest();
        } 

        function updateTextInputM(val) {
            document.getElementById('textInputM').value = val;
            GetRequest();
        }

        function ShowHideLine() {
            if ($('#line').prop('checked')) {
                config.data.datasets[0].backgroundColor = ""#FF0000"";
                config.data.datasets[0].borderColor = ""#FF0000"";
                GetRequest();
            } else {
                config.data.datasets[0].backgroundCol");
            WriteLiteral(@"or = ""#FFF"";
                config.data.datasets[0].borderColor = ""#FFF"";
                GetRequest();
            }
                

        }
    
        function DrawChart(config) {
            let chartContainer = document.getElementById('chart-container')
            chartContainer.innerHTML = '';
            let canvas = document.createElement('canvas');
            chartContainer.appendChild(canvas);
            canvas.id = 'myChart';
            canvas.width = '700px';
            canvas.height = '500px';
            var ctx = document.getElementById('myChart').getContext('2d');
            var myChart = new Chart(ctx, config);    
        }
        function GetRequest() {
            $.get(""/Home/AxisX?n="" + $(""#textInput"").val() + ""&m="" + $(""#textInputM"").val(),
                function (data) {                    
                    config.data.labels = data; 
                    $.get(""/Home/AxisY?amplitude1="" + $(""#amplitude1"").val() + ""&amplitude2="" + $(""#amplitude2"")");
            WriteLiteral(@".val() + ""&amplitude3="" + $(""#amplitude3"").val() + ""&amplitude4="" + $(""#amplitude4"").val() + ""&initialPhase="" + $(""#initialphase"").val() + ""&frequency1="" + $(""#frequency1"").val()  + ""&frequency2="" + $(""#frequency2"").val() + ""&frequency3="" + $(""#frequency3"").val() + ""&frequency4="" + $(""#frequency4"").val() + ""&n="" + $(""#textInput"").val() + ""&m="" + $(""#textInputM"").val() + ""&noise="" + $('#noise').prop('checked') + ""&frequencym="" + $('#frequencym').prop('checked') + ""&amplitudem="" + $('#amplitudem').prop('checked') + ""&line="" + $('#line').prop('checked')+""&radiobutton=""+$(""#form input[type='radio']:checked"").val(),
                        function (data) { 
                            let data1 = data.splice(0, data.length / 3);
                            let data2 = data.splice(0, data.length / 3);
                            let data3 = data.splice(0 ,data.length / 3);
                            
                            config.data.datasets.push(config.data.datasets[0]);
                           ");
            WriteLiteral(@" config.data.datasets.push(config.data.datasets[0]);

                            config.data.datasets[0].data = data1;
                            config.data.datasets[1].data = data2;
                            config.data.datasets[2].data = data3;
                        console.log(data);
                        DrawChart(config);
                    }
                    );                    
                });
                        
        }
    </script>

</div>
");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<LaboratoryWork1.ViewModels.Formula> Html { get; private set; }
    }
}
#pragma warning restore 1591
