@model LaboratoryWork1.ViewModels.Formula

@{
    ViewData["Title"] = "Home Page";
}

<div class="text-center" style="display: flex;">
    <form method="post" asp-controller="Home" asp-action="Index" id="form" style="display: flex; flex-direction: row;">
        <div style="display: flex; flex-direction: column; align-items: flex-start; margin-right: 10px;">
            <label>Амплитуда 1<input type="number" step="0.1" name="amplitude1" value="0.6" id="amplitude1" onchange="GetRequest()" style="width: 70px" /></label>
            <label>Амплитуда 2<input type="number" step="0.1" name="amplitude2" value="0.5" id="amplitude2" onchange="GetRequest()" style="width: 70px" /></label>
            <label>Амплитуда 3<input type="number" step="0.1" name="amplitude3" value="0.5" id="amplitude3" onchange="GetRequest()" style="width: 70px" /></label>
            <label>Амплитуда 4<input type="number" step="0.1" name="amplitude4" value="0.5" id="amplitude4" onchange="GetRequest()" style="width: 70px" /></label>
            <label>Начальная фаза<input type="number" step="0.1" name="initialPhase" value="0.2" id="initialphase" onchange="GetRequest()" style="width: 70px" /></label>
            <label>Частота 1<input type="number" step="0.1" name="frequency1" value="1" id="frequency1" onchange="GetRequest()" style="width: 70px" /></label>
            <label>Частота 2<input type="number" step="0.1" name="frequency2" value="1" id="frequency2" onchange="GetRequest()" style="width: 70px" /></label>
            <label>Частота 3<input type="number" step="0.1" name="frequency3" value="1" id="frequency3" onchange="GetRequest()" style="width: 70px" /></label>
            <label>Частота 4<input type="number" step="0.1" name="frequency4" value="1" id="frequency4" onchange="GetRequest()" style="width: 70px" /></label>
            <label>
                N
                <input id="range" type="range" name="n" min="256" max="20480" step="256" value="256" onchange="updateTextInput(this.value)" />
                <input type="text" id="textInput" value="256" onchange="GetRequest()" style="width: 70px" />
            </label>
            <label>
                M
                <input id="rangeM" type="range" name="m" min="10" max="1024" step="10" value="10" onchange="updateTextInputM(this.value)" />
                <input type="text" id="textInputM" value="10" onchange="GetRequest()" style="width: 70px" />
            </label>
            <label><input type="checkbox" name="noise" id="noise" onchange="GetRequest()" />Шум</label>
            <label><input type="checkbox" name="line" id="line" onchange="ShowHideLine()" />Линии</label>
            <label><input type="checkbox" name="frequencym" id="frequencym" onchange="GetRequest()" />Частотная модуляция</label>
            <label><input type="checkbox" name="amplitudem" id="amplitudem" onchange="GetRequest()" />Амплитудная модуляция</label>
        </div>
        <div style="display: flex; flex-direction: column; align-items: flex-start;">
            <label><input type="radio" name="radio" value="1" checked onchange="GetRequest()" />Синусоида</label>
            <label><input type="radio" name="radio" value="3" onchange="GetRequest()" />Квадратичный</label>
            <label><input type="radio" name="radio" value="4" onchange="GetRequest()" />Треугольный</label>
            <label><input type="radio" name="radio" value="5" onchange="GetRequest()" />Пилообразный</label>
            <label><input type="radio" name="radio" value="6" onchange="GetRequest()" />Синусоида + Квадратичный</label>
            <label><input type="radio" name="radio" value="7" onchange="GetRequest()" />Квадратичный + Треугольный</label>
            <label><input type="radio" name="radio" value="8" onchange="GetRequest()" />Треугольный + Пилообразный</label>
            <label><input type="radio" name="radio" value="9" onchange="GetRequest()" />Пилообразный + Синусоида</label>
            <label><input type="radio" name="radio" value="10" onchange="GetRequest()" />Синусоида + Квадратичный + Треугольный</label>
            <label><input type="radio" name="radio" value="11" onchange="GetRequest()" />Квадратичный + Треугольный + Пилообразный</label>
            <label><input type="radio" name="radio" value="12" onchange="GetRequest()" />Все сразу</label>
        </div>
        
    </form>
    <div style="width: 700px; height: 500px;" id="chart-container">
        
    </div>


    <script src="~/js/Chart.js"></script>

    <script>
        var config = {
                type: 'line',
                data: {
                    labels: [],
                    datasets: [{
                        label: '',
                        backgroundColor: "#FFF",
                        borderColor: "#FFF",
                        borderWidth: 0,
                        pointBackgroundColor: "#FF0000",
                        pointBorderColor: "#FF0000",
                        lineTension: 0,
                        fill: false,
                        data: []
                    }]
                },
                options: {
                    elements: {
                        point: {
                            radius: 0.5
                        }
                    },
                    responsive: true,
                    title: {
                        display: false,
                        text: 'Chart'
                    },
                    scales: {
                        xAxes: [{
                            display: true,
                        }],
                        yAxes: [{
                            ticks: {
                                stepSize: 1,
                            },
                            display: true,
                        }]
                    }
                }
            };
        window.onload = () => GetRequest() ;
        function updateTextInput(val) {
            document.getElementById('textInput').value = val;
            GetRequest();
        } 

        function updateTextInputM(val) {
            document.getElementById('textInputM').value = val;
            GetRequest();
        }

        function ShowHideLine() {
            if ($('#line').prop('checked')) {
                config.data.datasets[0].backgroundColor = "#FF0000";
                config.data.datasets[0].borderColor = "#FF0000";
                GetRequest();
            } else {
                config.data.datasets[0].backgroundColor = "#FFF";
                config.data.datasets[0].borderColor = "#FFF";
                GetRequest();
            }
                

        }
    
        function DrawChart(config) {
            let chartContainer = document.getElementById('chart-container')
            chartContainer.innerHTML = '';
            let canvas = document.createElement('canvas');
            chartContainer.appendChild(canvas);
            canvas.id = 'myChart';
            canvas.width = '700px';
            canvas.height = '500px';
            var ctx = document.getElementById('myChart').getContext('2d');
            var myChart = new Chart(ctx, config);    
        }
        function GetRequest() {
            $.get("/Home/AxisX?n=" + $("#textInput").val() + "&m=" + $("#textInputM").val(),
                function (data) {                    
                    config.data.labels = data; 
                    $.get("/Home/AxisY?amplitude1=" + $("#amplitude1").val() + "&amplitude2=" + $("#amplitude2").val() + "&amplitude3=" + $("#amplitude3").val() + "&amplitude4=" + $("#amplitude4").val() + "&initialPhase=" + $("#initialphase").val() + "&frequency1=" + $("#frequency1").val()  + "&frequency2=" + $("#frequency2").val() + "&frequency3=" + $("#frequency3").val() + "&frequency4=" + $("#frequency4").val() + "&n=" + $("#textInput").val() + "&m=" + $("#textInputM").val() + "&noise=" + $('#noise').prop('checked') + "&frequencym=" + $('#frequencym').prop('checked') + "&amplitudem=" + $('#amplitudem').prop('checked') + "&line=" + $('#line').prop('checked')+"&radiobutton="+$("#form input[type='radio']:checked").val(),
                        function (data) { 
                            let data1 = data.splice(0, data.length / 3);
                            let data2 = data.splice(0, data.length / 3);
                            let data3 = data.splice(0 ,data.length / 3);
                            
                            config.data.datasets.push(config.data.datasets[0]);
                            config.data.datasets.push(config.data.datasets[0]);

                            config.data.datasets[0].data = data1;
                            config.data.datasets[1].data = data2;
                            config.data.datasets[2].data = data3;
                        console.log(data);
                        DrawChart(config);
                    }
                    );                    
                });
                        
        }
    </script>

</div>
