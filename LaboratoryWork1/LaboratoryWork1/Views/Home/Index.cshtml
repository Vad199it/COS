@model LaboratoryWork1.ViewModels.Formula

@{
    ViewData["Title"] = "Home Page";
}

    <div class="text-center" style="display: flex;">
        <form method="post" asp-controller="Home" asp-action="Index" id="form" style="display: flex; flex-direction: column;  align-items: flex-start;">
            <div style="display: none;">

                <label>Амплитуда 2<input type="number" step="0.1" name="amplitude2" value="0.5" id="amplitude2" onchange="GetRequest()" style="width: 70px" /></label>
                <label>Амплитуда 3<input type="number" step="0.1" name="amplitude3" value="0.5" id="amplitude3" onchange="GetRequest()" style="width: 70px" /></label>
                <label>Амплитуда 4<input type="number" step="0.1" name="amplitude4" value="0.5" id="amplitude4" onchange="GetRequest()" style="width: 70px" /></label>
                <label>Частота 1<input type="number" step="0.1" name="frequency1" value="1" id="frequency1" onchange="GetRequest()" style="width: 70px" /></label>
                <label>Частота 2<input type="number" step="0.1" name="frequency2" value="1" id="frequency2" onchange="GetRequest()" style="width: 70px" /></label>
                <label>Частота 3<input type="number" step="0.1" name="frequency3" value="1" id="frequency3" onchange="GetRequest()" style="width: 70px" /></label>
                <label>Частота 4<input type="number" step="0.1" name="frequency4" value="1" id="frequency4" onchange="GetRequest()" style="width: 70px" /></label>

                <label><input type="checkbox" name="amplitudem" id="amplitudem" onchange="GetRequest()" />Амплитудная модуляция</label>
                <div style="display: flex; flex-direction: column; align-items: flex-start;">
                    <label><input type="radio" name="radio" value="1" checked onchange="GetRequest()" />Синусоида</label>
                    <label><input type="radio" name="radio" value="5" onchange="GetRequest()" />Пилообразный</label>
                    <label><input type="radio" name="radio" value="3" onchange="GetRequest()" />Квадратичный</label>
                    <label><input type="radio" name="radio" value="4" onchange="GetRequest()" />Треугольный</label>
                    <label><input type="radio" name="radio" value="6" onchange="GetRequest()" />Синусоида + Квадратичный</label>
                    <label><input type="radio" name="radio" value="7" onchange="GetRequest()" />Квадратичный + Треугольный</label>
                    <label><input type="radio" name="radio" value="8" onchange="GetRequest()" />Треугольный + Пилообразный</label>
                    <label><input type="radio" name="radio" value="9" onchange="GetRequest()" />Пилообразный + Синусоида</label>
                </div>
            </div>
            <label>Амплитуда 1<input type="number" step="0.1" name="amplitude" value="10" id="amplitude" onchange="GetRequest()" style="width: 70px" /></label>
            <label>Частота 1<input type="number" step="0.1" name="frequency" value="10" id="frequency" onchange="GetRequest()" style="width: 70px" /></label>
            <label>Начальная фаза<input type="number" step="0.1" name="initialPhase" value="0" id="initialphase" onchange="GetRequest()" style="width: 70px" /></label>
            <label>
                N
                <input id="range" type="range" name="n" min="256" max="2048" step="256" value="256" onchange="updateTextInput(this.value)" />
                <input type="text" id="textInput" value="256" onchange="GetRequest()" style="width: 70px" />
            </label>
            <label><input type="radio" name="radio" value="1" checked onchange="GetRequest()" />Гармонический</label>
            <label><input type="radio" name="radio" value="2" onchange="GetRequest()" />Полигармонический</label>
            <label><input type="radio" name="radio" value="3" onchange="GetRequest()" />Полигармонический (быстрое Фурье)</label>
            <label><input type="checkbox" name="lowfrequency" id="lowfrequency" onchange="GetRequest()" />Низкочастотная фильтрация</label>
            <label><input type="checkbox" name="highfrequency" id="highfrequency" onchange="GetRequest()" />Высокочастотная фильтрация</label>
            <label><input type="checkbox" name="linefrequency" id="linefrequency" onchange="GetRequest()" />Полосовая фильтрация</label>
            <label>
                Верхняя граница
                <input id="rangeHighEdge" type="range" name="rangehighedge" min="0" max="150" step="1" value="0" onchange="updateTextInputHighEdge(this.value)" />
                <input type="text" id="textInputHighEdge" value="0" onchange="GetRequest()" style="width: 70px" />
            </label>
            <label>
                Нижняя граница
                <input id="rangeLowEdge" type="range" name="rangelowedge" min="0" max="150" step="1" value="0" onchange="updateTextInputLowEdge(this.value)" />
                <input type="text" id="textInputLowEdge" value="0" onchange="GetRequest()" style="width: 70px" />
            </label>
        </form>
        <div style="display: flex; flex-direction: column;  align-items: flex-start;">
            <div style="width: 700px; height: 500px;" id="chart-container-1"></div>
            <div style="width: 700px; height: 500px;" id="chart-container-2"></div>
            <div style="width: 700px; height: 500px;" id="chart-container-3"></div>
            <div style="width: 700px; height: 500px;" id="chart-container-4"></div>
            <div style="width: 700px; height: 500px;" id="chart-container-5"></div>
        </div>
        
        <script src="~/js/Chart.js"></script>

        <script>
            var config7 = {
                type: 'line',
                data: {
                    labels: [],
                    datasets: [{
                label: '',
                backgroundColor: "#FF0000",
                borderColor: "#FF0000",
                borderWidth: 0,
                pointBackgroundColor: "#FF0000",
                pointBorderColor: "#FF0000",
                lineTension: 0,
                fill: false,
                data: []
                    },
                        {
                label: '',
                backgroundColor: "#008000",
                borderColor: "#008000",
                borderWidth: 0,
                pointBackgroundColor: "#008000",
                pointBorderColor: "#008000",
                lineTension: 0,
                fill: false,
                data: []
            }
                    ]
                },
                options: {
                    elements: {
                        point: {
                            radius: 0.5
                        }
                    },
                    responsive: true,
                    title: {
                        display: false,
                        text: 'Chart'
                    },
                    scales: {
                        xAxes: [{
                            display: true,
                        }],
                        yAxes: [{
                            ticks: {
                                stepSize: 1,
                            },
                            display: true,
                        }]
                    }
                }
            }
            
            var config = {
                type: 'line',
                data: {
                    labels: [],
                    datasets: [{
                label: '',
                backgroundColor: "#FF0000",
                borderColor: "#FF0000",
                borderWidth: 0,
                pointBackgroundColor: "#FF0000",
                pointBorderColor: "#FF0000",
                lineTension: 0,
                fill: false,
                data: []
            }]
                },
                options: {
                    elements: {
                        point: {
                            radius: 0.5
                        }
                    },
                    responsive: true,
                    title: {
                        display: false,
                        text: 'Chart'
                    },
                    scales: {
                        xAxes: [{
                            display: true,
                        }],
                        yAxes: [{
                            ticks: {
                                stepSize: 1,
                            },
                            display: true,
                        }]
                    }
                }
            };
            var config1 = JSON.parse(JSON.stringify(config));
            var config2 = JSON.parse(JSON.stringify(config));
            var config3 = JSON.parse(JSON.stringify(config));
            var config4 = JSON.parse(JSON.stringify(config));
            var config5 = JSON.parse(JSON.stringify(config));
            
            window.onload = () => GetRequest();
            function updateTextInput(val) {
                document.getElementById('textInput').value = val;
                GetRequest();
            }

            function updateTextInputHighEdge(val) {
                document.getElementById('textInputHighEdge').value = val;
                GetRequest();
            }

            function updateTextInputLowEdge(val) {
                document.getElementById('textInputLowEdge').value = val;
                GetRequest();
            }

            function ShowHideLine() {
                if ($('#line').prop('checked')) {
                    config.data.datasets[0].backgroundColor = "#FF0000";
                    config.data.datasets[0].borderColor = "#FF0000";
                    GetRequest();
                } else {
                    config.data.datasets[0].backgroundColor = "#FFF";
                    config.data.datasets[0].borderColor = "#FFF";
                    GetRequest();
                }
            }

            function DrawChart(config, number) {
                let chartContainer = document.getElementById('chart-container-' + number)
                chartContainer.innerHTML = '';
                let canvas = document.createElement('canvas');
                chartContainer.appendChild(canvas);
                canvas.id = 'myChart-' + number;
                canvas.width = '700px';
                canvas.height = '500px';
                var ctx = document.getElementById('myChart-' + number).getContext('2d');
                var myChart = new Chart(ctx, config);
            }

            function GetRequest() {
                $.get("/Home/AxisX?n=" + $("#textInput").val(),
                    function (data) {                       
                        config7.data.labels = data;
                        config2.data.labels = data;
                        config3.data.labels = data;
                        config4.data.labels = data;
                        config5.data.labels = data;
                        $.get("/Home/AxisY?amplitude=" + $("#amplitude").val() + "&initialPhase=" + $("#initialphase").val() + "&frequency=" + $("#frequency").val() + "&n=" + $("#textInput").val() + "&radiobutton="+$("#form input[type='radio']:checked").val() + "&lowfrequency=" + $('#lowfrequency').prop('checked') + "&highfrequency=" + $('#highfrequency').prop('checked') + "&linefrequency=" + $('#linefrequency').prop('checked') + "&rangehighedge=" + $("#textInputHighEdge").val() + "&rangelowedge=" + $("#textInputLowEdge").val() ,
                            function (data) {
                                console.log(data);

                                config7.data.datasets[0].data = data.item1;
                                
                                config7.data.datasets[1].data = data.item4;

                                config2.data.datasets[0].data = data.item2;

                                config3.data.datasets[0].data = data.item3;

                                config4.data.datasets[0].data = data.item4;

                                config5.data.datasets[0].data = data.item5;
                                
                                DrawChart(config7, 1);
                                DrawChart(config2, 2);
                                DrawChart(config3, 3);
                                DrawChart(config4, 4);
                                DrawChart(config5, 5);
                            }
                        );
                       
                        
                       
                    });

            }
        </script>

    </div>
